# Copyright 2007 Bryan Ã˜stergaard <kloeri@exherbo.org>
# Copyright 2010 Sterling X. Winter <replica@exherbo.org>
# Copyright 2012 Saleem Abdulrasool <compnerd@compnerd.org>
# Distributed under the terms of the GNU General Public License v2

require kernel.org [ repo=linux/kernel/git/stable/linux-stable ]
require kernel

export_exlib_phases pkg_pretend src_prepare src_compile src_install

myexparam path=

if ever at_least 3.0 ; then
    DOWNLOADS="mirror://kernel/linux/kernel/v$(ever major).x/$(exparam path)/linux-${PV}.tar.xz"
else
    DOWNLOADS="mirror://kernel/linux/kernel/v$(ever range 1-2)/$(exparam path)/linux-${PV}.tar.bz2"
fi

SUMMARY="Linux kernel headers"
HOMEPAGE="https://www.kernel.org"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS=""

RESTRICT="test"

DEPENDENCIES=""

WORK="${WORKBASE}/linux-${PV}"

linux-headers_pkg_pretend() {
    if ! kernel_version_at_least ${PV} ; then
        ewarn "Kernel headers version mismatch: Installing kernel headers newer than the"
        ewarn "running kernel can break your system. Do not proceed unless you know what"
        ewarn "you're doing."
    fi
}

linux-headers_src_prepare() {
    default
    if [[ $(exhost --target) == *-musl* ]];then
        einfo "Please note that non-upstream patches are being applied to ${PN} for musl support."
        einfo "This means you will likely not get any support from the kernel upstream with issues"
        einfo "relating to the userspace headers. So, if you have any issues, report them to"
        einfo "Kylie McClain <somasis@exherbo.org> or somasis on #exherbo@freenode."
        if [[ -f "${FILES}"/${PNV}-musl.patch ]];then
            expatch "${FILES}"/${PNV}-musl.patch
        elif [[ -f "${FILES}"/${PN}-$(ever major)-musl.patch ]];then
            nonfatal expatch "${FILES}"/${PN}-$(ever major)-musl.patch || \
                die "Failed to patch ${PV} for musl support. Use a new kernel or adapt the patch."
        else
            die "No patch for musl support could be found. A patch is required for musl support." \
                "Either upgrade your kernel version to a supported one, or adapt the patch."
        fi
    fi
}

linux-headers_src_compile() {
    :
}

# TODO(?) need to sanitize headers at some point
linux-headers_src_install() {
    local _host_architectures=(
        aarch64-unknown-linux-gnueabi:arm64
        armv4-unknown-linux-gnueabi:arm
        armv4-unknown-linux-gnueabihf:arm
        armv4-unknown-linux-musleabi:arm
        armv4-unknown-linux-musleabihf:arm
        armv5-unknown-linux-gnueabi:arm
        armv5-unknown-linux-gnueabihf:arm
        armv5-unknown-linux-musleabi:arm
        armv5-unknown-linux-musleabihf:arm
        armv6-unknown-linux-gnueabi:arm
        armv6-unknown-linux-gnueabihf:arm
        armv6-unknown-linux-musleabi:arm
        armv6-unknown-linux-musleabihf:arm
        armv7-unknown-linux-gnueabi:arm
        armv7-unknown-linux-gnueabihf:arm
        armv7-unknown-linux-musleabi:arm
        armv7-unknown-linux-musleabihf:arm
        i686-pc-linux-gnu:i386
        i686-pc-linux-musl:i386
        ia64-unknown-linux-gnu:ia64
        x86_64-pc-linux-gnu:x86_64
        x86_64-pc-linux-musl:x86_64
        powerpc64-unknown-linux-gnu:powerpc
    )

    local arch= entry= target=$(exhost --target)

    for entry in "${_host_architectures[@]}" ; do
        [[ ${entry%:*} == ${target} ]] || continue
        arch=${entry#*:}
        break
    done

    [[ -n ${arch} ]] || die "unsupported host '${target}', please update linux-headers.exlib"

    edo mkdir -p "${IMAGE}/usr/${target}"
    edo emake                                     \
        ARCH=${arch}                              \
        CROSS_COMPILE=$(exhost --tool-prefix)     \
        HOSTCC="${CHOST}-cc"                      \
        INSTALL_HDR_PATH="${IMAGE}/usr/${target}" \
        headers_install
    edo find "${IMAGE}/usr/${target}/include" -name '.install' -delete -or \
                                              -name '..install.cmd' -delete

    # scsi.h is now provided by sys-libs/glibc
    ever at_least 2.6.35 || edo rm "${IMAGE}"/usr/${target}/include/scsi/scsi.h

    # nuke empty directory
    ever at_least 3.8 && edo rmdir "${IMAGE}"/usr/${target}/include/uapi
}

