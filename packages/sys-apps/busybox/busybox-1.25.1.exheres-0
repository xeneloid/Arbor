# Copyright 2007 Bryan Ã˜stergaard <kloeri@exherbo.org>
# Copyright 2009 Daniel Mierswa <impulze@impulze.org>
# Copyright 2012 Wouter van Kesteren <woutershep@gmail.com>
# Copyright 2015-2016 Kylie McClain <somasis@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require toolchain-funcs alternatives flag-o-matic

SUMMARY="BusyBox provides tiny replacements for many common UNIX utilities"
HOMEPAGE="https://busybox.net"
DOWNLOADS="${HOMEPAGE}/downloads/${PNV}.tar.bz2"

REMOTE_IDS="freecode:${PN}"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~arm ~armv7 ~x86"
MYOPTIONS="doc static"

DEPENDENCIES="
    build:
        sys-kernel/linux-headers[<3.0|>=3.0-r1]
    test:
        app-arch/zip
    run:
        !app-arch/gzip[<1.6-r2] [[
            description = [ Alternatives conflict ]
            resolution = upgrade-blocked-before
        ]]
        !net-misc/wget[<1.17.1-r1] [[
            description = [ Alternatives conflict ]
            resolution = upgrade-blocked-before
        ]]
        !sys-apps/coreutils[<8.24-r3] [[
            description = [ Alternatives conflict ]
            resolution = upgrade-blocked-before
        ]]
"

bb_make() {
    local make_options=(
        CROSS_COMPILE=$(exhost --tool-prefix)
        CFLAGS="${CFLAGS}"
        CXXFLAGS="${CXXFLAGS}"
        LDFLAGS="${LDFLAGS}"

        HOSTCC=$(exhost --build)-cc
        HOSTCXX=$(exhost --build)-c++
        HOSTCFLAGS=$(print-build-flags CFLAGS)
        HOSTCXXFLAGS=$(print-build-flags CXXFLAGS)
        HOSTLDFLAGS=$(print-build-flags LDFLAGS)

        V=1
        SKIP_STRIP=y
    )
    emake "${make_options[@]}" "$@"
}

pkg_pretend() {
    if ! cc-is-gcc;then
        die "Building ${CATEGORY}/${PNV} with a compiler other than GCC is known to cause segfaults with certain busybox applets. Aborting."
    fi
}

src_prepare() {
    default

    # /var/run -> /run
    edo find ./ -type f -exec sed -i -e 's:/var/run:/run:g' -- {} +

    # nuke tests that require pid 1 to be named 'init'
    edo sed -i -e '/^testing.*init/ d' testsuite/pidof.tests

    # temporarily disable hostname tests due to coreutils's hostname
    edo rm testsuite/hostname/hostname-{d,s}-works

    # not all examples are commented out...
    edo sed -i -e 's:^opt:#opt:' examples/udhcp/udhcpd.conf

    # clever little trick to avoid dependency on net-tools
    # http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=684596
    edo sed -e 's:ifconfig :/bin/busybox ifconfig :g' \
            -e 's:route :/bin/busybox route :g' \
            -i examples/udhcp/simple.script

    # testsuite fix for multiarch
    edo sed \
        -e "s:strings -af ../../busybox > foo:$(exhost --tool-prefix)strings -af ../../busybox > foo:" \
        -i testsuite/strings/strings-works-like-GNU

    edo cp "${FILES}"/config .config
}

src_configure() {
    yes '' | bb_make oldconfig
}

src_compile() {
    local CONFIG_STATIC=n
    option static && local CONFIG_STATIC=y
    bb_make CONFIG_STATIC=${CONFIG_STATIC} busybox
}

src_test() {
    if exhost --is-native -q;then
        export SKIP_KNOWN_BUGS=y SKIP_INTERNET_TESTS=y
        edo pushd testsuite >/dev/null
        edo ./runtest -v
        edo popd >/dev/null
    fi
}

src_install() {
    local host=$(exhost --target)

    # busybox
    dobin busybox

    # udhcpc
    exeinto /usr/share/udhcpc
    newexe examples/udhcp/simple.script default.script
    dosym busybox /usr/${host}/bin/udhcpc
    dosym busybox /usr/${host}/bin/udhcpc6

    # udhcpd
    insinto /etc
    doins examples/udhcp/udhcpd.conf
    dosym busybox /usr/${host}/bin/udhcpd

    # dumpleases
    keepdir /var/lib/misc/
    dosym busybox /usr/${host}/bin/dumpleases

    # docs
    emagicdocs
    if option doc;then
        dodoc -r examples
        dodoc docs/*.{txt,pod,html}
    fi

    # for f in $(cave executables sys-apps/coreutils | sort -ud | grep -Ev '(hostname|uptime);do
    #     f=${f##*/g}
    #     busybox --list | grep -wFq -- "$f" && echo "$f"
    # done
    coreutils=(
        '[' base64 basename cat chgrp chmod chown chroot cksum comm cp cut date
        dd df dirname du echo env expand expr false fold head hostid
        id install kill ln logname ls md5sum mkdir mkfifo mknod mktemp mv
        nice nohup od printenv printf pwd readlink realpath rm rmdir seq
        sha1sum sha256sum sha512sum shuf sleep sort split stat stty sum sync
        tac tail tee test timeout touch tr true truncate tty uname unexpand
        uniq unlink users wc who whoami yes
    )

    # alternatives
    local coreutils_alternatives=()
    for prog in "${coreutils[@]}";do
        coreutils_alternatives+=(
             /usr/$(exhost --target)/bin/${prog} /usr/$(exhost --target)/bin/busybox
        )
    done

    alternatives_for awk        ${PN}   75  \
        /usr/$(exhost --target)/bin/awk         /usr/$(exhost --target)/bin/busybox
    alternatives_for coreutils  ${PN}   75      "${coreutils_alternatives[@]}"
    alternatives_for cpio       ${PN}   75  \
        /usr/$(exhost --target)/bin/cpio        /usr/$(exhost --target)/bin/busybox
    alternatives_for grep       ${PN}   75  \
        /usr/$(exhost --target)/bin/grep        /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/egrep       /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/fgrep       /usr/$(exhost --target)/bin/busybox
    alternatives_for gzip       ${PN}   75  \
        /usr/$(exhost --target)/bin/gunzip      /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/gzip        /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/uncompress  /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/zcat        /usr/$(exhost --target)/bin/busybox
    alternatives_for hostname   ${PN}   75  \
        /usr/$(exhost --target)/bin/hostname    /usr/$(exhost --target)/bin/busybox
    alternatives_for kmod-tools ${PN}   75  \
        /usr/$(exhost --target)/bin/rmmod       /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/modprobe    /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/modinfo     /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/lsmod       /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/insmod      /usr/$(exhost --target)/bin/busybox \
        /usr/$(exhost --target)/bin/depmod      /usr/$(exhost --target)/bin/busybox
    alternatives_for man        ${PN}   75  \
        /usr/$(exhost --target)/bin/man         /usr/$(exhost --target)/bin/busybox
    alternatives_for ntpd       ${PN}   75  \
        /usr/$(exhost --target)/bin/ntpd        /usr/$(exhost --target)/bin/busybox
    alternatives_for sed        ${PN}   75  \
        /usr/$(exhost --target)/bin/sed         /usr/$(exhost --target)/bin/busybox
    alternatives_for tar        ${PN}   75  \
        /usr/$(exhost --target)/bin/tar         /usr/$(exhost --target)/bin/busybox
    alternatives_for uptime     ${PN}   75  \
        /usr/$(exhost --target)/bin/uptime      /usr/$(exhost --target)/bin/busybox
    alternatives_for unzip      ${PN}   75  \
        /usr/$(exhost --target)/bin/unzip       /usr/$(exhost --target)/bin/busybox
    alternatives_for vi         ${PN}   75  \
        /usr/$(exhost --target)/bin/vi          /usr/$(exhost --target)/bin/busybox
    alternatives_for wget       ${PN}   75  \
        /usr/$(exhost --target)/bin/wget        /usr/$(exhost --target)/bin/busybox
}

