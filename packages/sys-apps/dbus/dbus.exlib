# Copyright 2010 Saleem Abdulrasool <compnerd@compnerd.org>
# Copyright 2010-2015 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

if ever is_scm ; then
    SCM_REPOSITORY="https://anongit.freedesktop.org/git/dbus/dbus.git"
    require scm-git
else
    DOWNLOADS="https://dbus.freedesktop.org/releases/${PN}/${PNV}.tar.gz"
fi

require flag-o-matic openrc-service systemd-service

export_exlib_phases src_configure src_compile src_test src_install

SUMMARY="D-Bus is a message bus system for interprocess communication (IPC)"
DESCRIPTION="
D-Bus is a message bus system, a simple way for applications to talk to one another.
In addition to interprocess communication, D-Bus helps coordinate process lifecycle;
it makes it simple and reliable to code a 'single instance' application or daemon,
and to launch applications and daemons on demand when their services are needed.
D-Bus supplies both a system daemon (for events such as 'new hardware device added'
or 'printer queue changed') and a per-user-login-session daemon (for general IPC
needs among user applications).
"
HOMEPAGE="https://${PN}.freedesktop.org"

BUGS_TO="philantrop@exherbo.org"

LICENCES="|| ( GPL-2 AFL-2.1 )"
SLOT="0"
MYOPTIONS="debug doc systemd X"

DEPENDENCIES="
    build:
        app-text/docbook-xml-dtd:4.4
        app-text/xmlto
        dev-libs/libxslt
        sys-devel/gettext
        virtual/pkg-config[>=0.20]
        doc? ( app-doc/doxygen )
        X? ( x11-proto/xproto )
    build+run:
        dev-libs/expat[>=1.95.8]
        dev-libs/glib:2[>=2.36]
        sys-apps/skeleton-filesystem-layout[>=0.5.4]
        group/messagebus
        group/plugdev
        user/messagebus
        systemd? ( sys-apps/systemd[>=226] )
        X? (
            x11-libs/libICE
            x11-libs/libSM
            x11-libs/libX11
        )
    suggestion:
        !systemd? (
            sys-auth/ConsoleKit2 [[
                description = [ required for access to paths controlled via at_console ]
            ]]
        )
"

if ever is_scm ; then
    DEPENDENCIES+="
        build:
            sys-devel/autoconf-archive
    "
fi

DEFAULT_SRC_INSTALL_EXTRA_DOCS=(
    dcop-howto.txt
    system-activation.txt
)

DEFAULT_SRC_INSTALL_EXTRA_PREFIXES=( doc/ )

dbus_src_configure() {
    # whitelist bind() to /tmp/dbus-fake-socket-*
    esandbox allow_net 'unix-abstract:/tmp/dbus-fake-socket-*'

    # Testing code (--enable-tests) disabled since building with tests support
    # creates an insecure (sic upstream), non-production use library
    local myconf=(
        --localstatedir=/var
        --enable-inotify
        --enable-xml-docs
        --disable-apparmor
        --disable-ducktype-docs
        --disable-libaudit
        --disable-selinux
        --disable-static
        --disable-tests
        --with-console-auth-dir=/run/console/
        --with-dbus-user=messagebus
        --with-session-socket-dir=/tmp
        --with-system-pid-file=/run/dbus.pid
        --with-system-socket=/run/dbus/system_bus_socket
        --with-systemdsystemunitdir=${SYSTEMDSYSTEMUNITDIR}
        --with-systemduserunitdir=${SYSTEMDUSERUNITDIR}
        $(option_enable debug asserts)
        $(option_enable debug developer)
        $(option_enable debug verbose-mode)
        $(option_enable doc doxygen-docs)
        $(option_enable systemd)
        $(option_enable systemd user-session)
        $(option_with X x)
    )

    if option systemd ; then
        myconf+=( SYSTEMCTL=/usr/$(exhost --target)/bin/systemctl )
    fi

    econf ${myconf[@]}

    esandbox disallow_net 'unix-abstract:/tmp/dbus-fake-socket-*'
}

dbus_src_compile() {
    # get backtraces from applications
    append-flags -rdynamic

    default
}

dbus_src_test() {
    DBUS_VERBOSE=1 default
}

dbus_src_install() {
    local host=$(exhost --target)

    default

    if ! option doc ; then
        [[ -d "${IMAGE}"/usr/share/doc/${PNVR}/api ]] && edo rmdir "${IMAGE}"/usr/share/doc/${PNVR}/api
    fi

    # systemd 226 now supports the concept of user buses replacing session buses, if used with dbus-1.10
    # (and enabled via dbus --enable-user-session)
    if ! option systemd ; then
        # dbus X session script (Gentoo bug #77504)
        # turns out to only work for GDM. has been merged into other desktop
        # (kdm and such scripts)
        exeinto /etc/X11/xinit/xinitrc.d/
        doexe "${FILES}"/30-dbus
    fi

    keepdir \
        /usr/${host}/libexec/dbus-1 \
        /usr/share/dbus-1/services \
        /usr/share/dbus-1/session.d \
        /usr/share/dbus-1/system.d \
        /usr/share/dbus-1/system-services \
        /var/lib/dbus \
        /usr/${host}/lib/dbus-1.0/test

    edo rmdir "${IMAGE}"/var/run/{dbus,}

    # hardcodes the path to the setuid helper that is used to launch system services
    edo sed \
        -e "s#/$(exhost --target)/#/host/#g" \
        -i "${IMAGE}"/usr/share/dbus-1/system.conf

    # keepdir legacy locations until our packages are migrated
    keepdir /etc/dbus-1/{session,system}.d/

    install_openrc_files
}

