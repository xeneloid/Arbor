# Copyright 2007, 2008 Bryan Østergaard
# Copyright 2008 Anders Ossowicki
# Copyright 2008, 2009, 2010 Ingmar Vanhassel
# Copyright 2008, 2009 Mike Kelly
# Copyright 2010 Ali Polatel
# Copyright 2013 Benedikt Morbach <moben@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'perl-5.8.8-r4.ebuild' from Gentoo, which is:
#     Copyright 1999-2007 Gentoo Foundation

require alternatives flag-o-matic

export_exlib_phases src_unpack src_prepare src_configure src_compile src_test src_install

myexparam perl_cross_ver=
myexparam perl_cross_base=${PV}

SUMMARY="Perl is a general-purpose programming language originally developed for text manipulation"
HOMEPAGE="http://www.perl.org"
DOWNLOADS="mirror://cpan/src/5.0/${PNV}.tar.xz"
DOWNLOADS+="
    https://github.com/arsv/${PN}-cross/releases/download/$(exparam perl_cross_ver)/${PN}-$(exparam perl_cross_base)-cross-$(exparam perl_cross_ver).tar.gz
"

REMOTE_IDS="cpan:${PN} freecode:${PN}"

UPSTREAM_CHANGELOG="http://search.cpan.org/dist/${PN}/pod/${PN}$(ever delete_all $(ever range 1-3))delta.pod"
UPSTREAM_DOCUMENTATION=

LICENCES="|| ( Artistic GPL-1 GPL-2 GPL-3 )"
SLOT="$(ever range 1-2)"
MYOPTIONS="
    dbm [[ description = [ rudimentary database support for Perl ] ]]
    ithreads [[ description = [ Perl multi-threading support ] ]]
    ( berkdb gdbm ) [[ requires = dbm ]]
    dbm? ( ( berkdb gdbm ) [[ number-selected = at-least-one ]] )
    multiplicity [[ description = [ multiple interpreter instances in the same process ] ]]
"

DEPENDENCIES="
    build+run:
        berkdb? ( sys-libs/db:= )
        gdbm? ( sys-libs/gdbm )
"

DEFAULT_SRC_INSTALL_EXTRA_DOCS=( Changes5 )

define() {
    echo "-D${1}=${2}"
}

option_define() {
    option "${1}" '-D' '-U'
}

perl-5_src_unpack() {
    default

    local perl_base
    exparam -v perl_base perl_cross_base

    if [[ ${perl_base} != ${PV} ]]; then
        # perlcross and perl versions don't match exactly
        edo cp -a "${WORKBASE}"/${PN}-${perl_base}/* "${WORK}"
    fi
}

perl-5_src_prepare() {
    default

    # find errno.h on multiarch
    edo sed -e "s#/usr/include#/usr/$(exhost --target)/include#g" \
            -i ext/Errno/Errno_pm.PL

    disabled_tests=(
        lib/perl5db.t               # fails with busybox man
        t/porting/customized.t      # Failed test 6 - SHA for cpan/ExtUtils-MakeMaker/lib/ExtUtils/Liblist/Kid.pm
    )

    # chmod is needed because perl devs don't know how to distribute files that are rw by default
    for test in "${disabled_tests[@]}";do
        edo chmod 644 "${test}"
        edo cat > "${test}" <<EOF
#!./perl
BEGIN {
    chdir 't' if -d 't';
    @INC = '../lib';
    require './test.pl';
    plan(1);
}

is("ok", "ok", "test disabled");
EOF
    done

    # TODO(moben) try using the build's perl as miniperl.
    # might not work at all
    #    Can't load '/var/tmp/paludis/build/dev-lang-perl-5.18.1/work/perl-5.18.1/ext/Opcode/../../lib/auto/File/Glob/Glob.so'
    #    for module File::Glob: /var/tmp/paludis/build/dev-lang-perl-5.18.1/work/perl-5.18.1/ext/Opcode/../../lib/auto/File/Glob/Glob.so:
    #    wrong ELF class: ELFCLASS32 …
}

perl-5_src_configure() {
    # Binaries are installed to ${perlbindir}, with ${SLOT} appended
    # Alternatives manages executables in ${perlbindir}
    # Libraries go into ${perllibdir}/core_perl/${SLOT}-arch/CORE/, which is appended to LDPATH
    # `man 1` are installed with a version
    perlprefix=/usr/$(exhost --target)
    perllibdir=${perlprefix}/lib/perl5
    perlbindir=${perlprefix}/bin

    # -Dfoo = define foo, -Ufoo = undefine foo.

    # -O3 breaks ext/XS/APItest/t/exception.t and maybe other stuff
    replace-flags -O3 -O2

    # Uses ld where it should really use cc
    # normal Configure doesn't respect LD and thus avoids this problem, but perlcross does.
    export LD=${CC}

    # TODO(moben) doesn't respect CC & friends for miniperl, because that is built for $(exhost --build)
    # currently (2013-09-27) no way to do this in exheres-0 afaics

    local myconf=(
        --build=$(exhost --build)
        --target=$(exhost --target)
        --target-tools-prefix=$(exhost --tool-prefix)
        --prefix=${perlprefix}
        --html1dir=/usr/share/doc/${PNVR}/html
        --html3dir=/usr/share/doc/${PNVR}/html
        $(define cf_by Exherbo)
        # This probably needs some further work... but should be okay for
        # now. At least parrot breaks if we do not have -${osname} in ${archname}
        "$(define archname "$(exhost --target)")"
        "$(define lddlflags "-shared ${LDFLAGS}")"
        $(define privlib    "${perllibdir}/core_perl/${SLOT}-pure"  )
        $(define archlib    "${perllibdir}/core_perl/${SLOT}-arch"  )
        $(define sitelib    "${perllibdir}/site_perl/${SLOT}-pure"  )
        $(define sitearch   "${perllibdir}/site_perl/${SLOT}-arch"  )
        $(define vendorlib  "${perllibdir}/vendor_perl/${SLOT}-pure")
        $(define vendorarch "${perllibdir}/vendor_perl/${SLOT}-arch")
        $(define perlpath "${perlbindir}/${PN}${SLOT}")
        $(define sharedir /usr/share)
        -Dusevendorprefix
        -Duselargefiles
        -Uinstallusrbinperl
        -Dusesoname
        -Ui_ndbm
        $(option_define berkdb)i_db
        $(option_define gdbm)i_gdbm
        $(option_define ithreads)usethreads
        $(option_define multiplicity)usemultiplicity
    )

    edo ./configure "${myconf[@]}" "${PERL5_CONFIGURE_PARAMS[@]}"
}

perl-5_src_compile() {
    # needed to fix compilation on musl systems
    emake libperl.so.${SLOT}.0
    emake
}

perl-5_src_test() {
    # This is necessary for t/cachepropagate-unix.t
    esandbox allow_net "unix:${TEMP}/**"
    # This is necessary for ext/IO/t/io_unix.t
    esandbox allow_net "unix:${WORK}/t/sock-*"
    # This is necessary for Net/Ping/t/510_ping_udp.t
    esandbox allow_net --connect "inet:127.0.0.1@7"
    # This is necessary for dist/IO/t/io_unix.t
    esandbox allow_net "unix:${WORK}/dist/IO/sock-*"

    [[ -v http_proxy ]] && unset http_proxy

    # Skip tests that require a tty (op/stat.t)
    export PERL_SKIP_TTY_TEST=1

    # This fixes the lib/ExtUtils/t/Embed.t test, which will otherwise try
    # to link against the installed libperl
    edo ln -s libperl.so.${SLOT}.0 libperl.so

    TEST_JOBS="${EXJOBS:-1}" emake test

    esandbox disallow_net "unix:${TEMP}/**"
    esandbox disallow_net "unix:${WORK}/t/sock-*"
    esandbox disallow_net --connect "inet:127.0.0.1@7"
    esandbox disallow_net "unix:${WORK}/dist/IO/sock-*"
}

perl-5_src_install() {
    default
    perlprefix=usr/$(exhost --target)
    perllibdir=${perlprefix}/lib/perl5
    perlbindir=${perlprefix}/bin

    edo cd "${IMAGE}"

    # We only want /usr/$(exhost --target)/bin/perl5.8.8, not /usr/$(exhost --target)/bin/perl (without the dash, standard across distros)
    # The former gets stripped by the buildsystem, so move the other one over it instead of removing
    edo mv ${perlbindir}/${PN}{,${SLOT}}
    edo ln -sf ${PN}${SLOT} ${perlbindir}/${PN}$(ever range 1-3)

    # Create & keep site and vendor dirs
    keepdir ${perllibdir}/{site,vendor}_perl/${SLOT}-{arch,pure}

    # We don't need packlists or perllocal.pod
    edo find usr/$(exhost --target)/lib -type f -name .packlist -or -name perllocal.pod -delete

    # Discard man3 manpages (use perldoc)
    edo rm -r usr/share/man/man3

    # Add alternative for perl tools and manpages
    # perl${SLOT} doesn't have a dash, handle that here
    local perl_alternatives=( /${perlbindir}/perl perl${SLOT} )
    local bin manpage manfile

    for bin in ${perlbindir}/* ; do
        # skip perl${SLOT} and config_data-perl-${SLOT}
        [[ ${bin} == *${SLOT} ]] && continue
        # skip perl$(ever range 1-3)
        [[ ${bin} == *${PN}$(ever range 1-3) ]] && continue
        perl_alternatives+=( "/${bin}" "${bin##*/}-${SLOT}" )
    done
    for manpage in usr/share/man/man1/*.1; do
        # skip config_data-perl-${SLOT}.1
        [[ ${manpage} == *${SLOT}.1 ]] && continue
        manfile=${manpage##*/}
        perl_alternatives+=( "/${manpage}" "${manfile/%.1/-${SLOT}.1}" )
    done

    perl_alternatives+=( /usr/$(exhost --target)/lib/libperl.so libperl.so.${PNV} )

    alternatives_for ${PN} ${SLOT} ${SLOT} "${perl_alternatives[@]}"
}

